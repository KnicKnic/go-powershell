# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
  GOPATH: 'c:\go_tmp'
  GOBIN: '$(GOPATH)\bin'

steps:
- checkout: self
  submodules: recursive

# # build dll
# - task: NuGetToolInstaller@0

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
# - task: PowerShell@2
#   inputs:
#     targetType: 'inline'
#     script: 'choco install -y golang --no-progress;
#       refreshenv ;
#       copy native-powershell\host.h .\pkg\powershell\ ;

- task: PowerShell@2
  displayName: "Setup Go environment"
  inputs:
    targetType: 'inline'
    script: '
      Write-Host "##vso[task.prependpath]$(GOBIN)";
      mkdir c:\go_tmp;
      '

# Go
# Get, build, or test a Go application, or run a custom Go command
- task: Go@0
  displayName: 'go build .\...'
  inputs:
    command: 'build' # Options: get, build, test, custom
    #customCommand: # Required when command == Custom
    arguments: '.\...' # Optional

# run tests
- task: Go@0
  displayName: 'Install gotestsum'
  inputs:
    command: 'get' # Options: get, build, test, custom
    #customCommand: # Required when command == Custom
    arguments: 'gotest.tools/gotestsum' # Optional

- task:  CmdLine@2
  displayName: "Run Tests"
  inputs:
    script: 'gotestsum --junitfile junit.xml'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit' # Options: JUnit, NUnit, VSTest, xUnit, cTest
    testResultsFiles: 'junit.xml'
    #searchFolder: '$(System.DefaultWorkingDirectory)' # Optional
    #mergeTestResults: false # Optional
    failTaskOnFailedTests: true # Optional
    #testRunTitle: # Optional
    #buildPlatform: # Optional
    #buildConfiguration: # Optional
    publishRunAttachments: true # Optional

- task: CmdLine@2
  displayName: Build examples_cmd.exe
  inputs:
    script: 'go build -a -o examples_cmd.exe  github.com/KnicKnic/go-powershell/examples/cmd'
- task: PowerShell@2
  displayName: Test examples_cmd.exe
  inputs:
    targetType: 'inline'
    script: '.\examples_cmd.exe -command .\\tests\t1.ps1 -command .\\tests\\t2.ps1'