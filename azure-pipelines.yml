# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'

steps:
- checkout: self
  submodules: true

- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'choco install -y golang --no-progress;
      choco install -y mingw --no-progress;
      refreshenv ;
      copy native-powershell\host.h .\ ;
      copy native-powershell\x64\Release\psh_host.dll . ;
      copy native-powershell\x64\Release\psh_host.dll .\tests\ ;
      mkdir c:\go_tmp;
      $env:GOPATH="c:\go_tmp";
      $env:GOBIN=$env:GOPATH + "\bin";
      write-host $env:GOBIN $pwd $env:GOPATH $env:GOROOT;
      dir . ;'
- task: CmdLine@2
  inputs:
    script: 'go build -x -v'
# - task: PowerShell@2
#   inputs:
#     errorActionPreference: 'continue'
#     ignoreLASTEXITCODE: true
#     targetType: 'inline'
#     script: 'go build -x -v 2>&1 >a.pdb'

# - task: CopyFiles@2
#   inputs:
#     sourceFolder: '$(Build.SourcesDirectory)'
#     contents: '**/$(BuildConfiguration)/**/?(*.exe|*.dll|*.pdb)'
#     TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: '**/?(*.exe|*.dll|*.pdb)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: drop
# run tests

- task: CmdLine@2
  inputs:
    script: 'go test github.com/KnicKnic/go-powershell/tests'
- task: CmdLine@2
  inputs:
    script: 'go build -a -o go-powershell.exe .\test_app'
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: '.\go-powershell.exe -command .\\tests\t1.ps1 -command .\\tests\\t2.ps1'